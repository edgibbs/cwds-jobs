buildscript {
    repositories {
        maven {
            url "http://sonar.dev.cwds.io:8081/artifactory/repo"
        }
        jcenter()
        maven {
            url "https://artifacts.elastic.co/maven"
        }
    }
}

plugins {
    id 'org.sonarqube' version '2.6'
    id 'com.github.jk1.dependency-license-report' version '1.5'
}

apply plugin: 'java'
apply plugin: 'eclipse'

project.ext {
    cwdsModelVersion = '3.9.10'
    calsApiVersion = '1.11.2'
    coreApiVersion = '1.19.1_931-RC'
    perryVersion = '6.11.0'
    testSupportVersion = '0.5.6_272-RC'
    commonsCliVersion = '1.4'
    commonsLangVersion = '3.6'
    guiceVersion = "4.1.0"
    slf4jVersion = '1.7.25'
    log4jVersion = '2.11.1'
    hibernateVersion = '5.2.8.Final'
    dropwizardVersion = '1.1.0'
    jUnitVersion = '4.12'
    jsonAssertVersion = '1.5.0'
    apacheCommonsTextVersion = '1.5'

    elasticsearchVersion = "6.8.0"
    dropwizardVersion = "1.1.0"

    projectMajorVersion = "1.4"

    isRelease = System.getProperty("Release") == "true"
    buildNumber = System.getProperty('BuildNumber')
    customVersion = System.getProperty('CustomVersion')

    projectSnapshotVersion = projectMajorVersion + "-SNAPSHOT"
    projectReleaseVersion = (customVersion == null || customVersion == "" || customVersion.startsWith('$') ? projectMajorVersion + '_' + buildNumber + '-RC' : customVersion )
    projectVersion = (isRelease ? projectReleaseVersion : projectSnapshotVersion )

    // Publishing configuration
    snapshotMavenRepo = "http://sonar.dev.cwds.io:8081/artifactory/repo"
    releaseMavenRepo = "http://sonar.dev.cwds.io:8081/artifactory/libs-release"
    artifactoryRepo = (isRelease ? releaseMavenRepo : snapshotMavenRepo)
    commonGroupId = 'gov.ca.cwds.jobs'
    allTestCoverageFile = "$buildDir/jacoco/allTestCoverage.exec"
}

if (System.getProperty('newVersion')) {
    def newVersion = "${System.getProperty('newVersion')}"
    version = newVersion
    projectVersion = newVersion
} else {
    version = projectVersion
}
group = commonGroupId

allprojects {
    apply plugin: 'jacoco'
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url artifactoryRepo
        }
        maven {
            url "https://artifacts.elastic.co/maven"
        }
    }

}

subprojects {
    apply plugin: 'java'

    dependencies {
        compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
        testCompile group: 'junit', name: 'junit', version: jUnitVersion
        testCompile group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'
    }

    sonarqube {
        properties {
            property "sonar.jacoco.reportPaths", allTestCoverageFile
        }
    }
}

dependencies {
}

task printProps << {
    println System.properties['DB_CMS_JDBC_URL']
}

task savePropertyFile (){
    Properties props = new Properties()
    File propsFile = new File('jenkins_build.properties')
    props.setProperty('elasticsearchVersion', elasticsearchVersion)
    props.setProperty('projectVersion',projectVersion)
    props.setProperty('artifactoryRepo',artifactoryRepo )
    props.store(propsFile.newWriter(), null)
}

tasks.withType(Test) {
    enableAssertions = true
    systemProperties project.properties.subMap(["DB_CMS_JDBC_URL", "DB_CMS_PASSWORD", "DB_CMS_SCHEMA", "DB_CMS_REP_SCHEMA", "DB_CMS_USER", "DB_NS_JDBC_URL", "DB_NS_PASSWORD", "DB_NS_SCHEMA", "DB_NS_USER"])
}

sonarqube {
  properties {
      property "sonar.projectKey", "cwds.ca.gov:cwds-jobs"
      property "sonar.projectName", "cwds-jobs"
      property "sonar.jacoco.reportPaths",   allTestCoverageFile
  }
}

task jacocoMergeTest(type: JacocoMerge) {
    destinationFile = file(allTestCoverageFile)
    executionData = project.fileTree(dir: '.', include:'**/build/jacoco/test.exec')
}

import com.github.jk1.license.render.CsvReportRenderer

licenseReport {
  renderers = [new CsvReportRenderer()]
}